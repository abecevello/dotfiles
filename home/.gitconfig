[alias]
	s = status
	l = log
	aliases = config --get-regexp ^alias\\.

	# Changing code
	amend = commit --amend --no-edit
	reword = commit --amend
	pop = stash pop
	a = add --all --verbose .
	empty = commit --allow-empty

	# Branches
	defaultbranch = "!f() { git symbolic-ref -q refs/remotes/origin/HEAD | cut -f4 -d/; }; f"
	cleanup = "!f() { git-delete-merged-branches; }; f"
	new-branch = "!f() { git checkout -b ${1}; }; f"
	co = checkout
	main = "!git checkout $(git defaultbranch)"
	p = pull
	uncommit = reset --soft HEAD^
	nuke = "!f() { git reset HEAD --hard && git clean -fd; }; f"
	sync = "!git pull origin $(git defaultbranch) --rebase"
	squash = "!git rebase -v -i $(git defaultbranch)"
	delete = "!f() { git branch -D ${1}; }; f"
	please = push --force-with-lease
	branches = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes
	rb = "!f() { git fetch && git rebase -i ${1-`git defaultbranch`}; }; f"

	# Github
	# From - https://salferrarello.com/git-alias-open-pull-request-github/
	create-pr = "!f() { \
			open \"$(git ls-remote --get-url $(git config --get branch.$(git rev-parse --abbrev-ref HEAD).remote) \
			| sed 's|git@github.com:\\(.*\\)$|https://github.com/\\1|' \
			| sed 's|\\.git$||'; \
			)/compare/$(\
			git config --get branch.$(git rev-parse --abbrev-ref HEAD).merge | cut -d '/' -f 3- \
			)?expand=1\"; \
  }; f"
	hub = "!f() { \
			open \"$(git ls-remote --get-url \
			| sed 's|git@github.com:\\(.*\\)$|https://github.com/\\1|' \
			| sed 's|\\.git$||'; \
			)\"; \
  }; f"
[user]
	name = Adam Becevello
[color]
	ui = auto
[fetch]
	prune = true
[push]
	default = current
	autoSetupRemote = true
[pull]
	rebase = true
[rebase]
	autostash = true
	autosquash = true
[diff]
	colorMoved = zebra
[init]
	defaultBranch = main

[include]
	path = ~/.computer.gitconfig
	path = /Users/adambecevello/.config/dev/gitconfig
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
